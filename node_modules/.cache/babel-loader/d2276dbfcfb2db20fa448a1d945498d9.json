{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyDhUimV11Dg_v0iY5OYofmTukeLYDM2Dwg\",\n  authDomain: \"crwn-db-e0987.firebaseapp.com\",\n  projectId: \"crwn-db-e0987\",\n  storageBucket: \"crwn-db-e0987.appspot.com\",\n  messagingSenderId: \"224708268930\",\n  appId: \"1:224708268930:web:5443f4dcc62a8b944f359b\",\n  measurementId: \"G-4EM2Z20Y1T\"\n};\nconst firebaseApp = initializeApp(config);\nexport const db = getFirestore(firebaseApp);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = getAuth();\nexport const firestore = getFirestore();\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, provider).catch(error => console.log(error)); // export default firebase;","map":{"version":3,"sources":["/home/shaboopi/Desktop/WebPageProjects/js/ztmCompReactDev/E-commerceProject/src/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getFirestore","doc","getDoc","setDoc","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","db","createUserProfileDocument","userAuth","additionalData","userRef","firestore","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","auth","provider","setCustomParameters","prompt","signInWithGoogle","catch"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,QAA8D,eAA9D;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,SAAS,EAAE,eAHA;AAIXC,EAAAA,aAAa,EAAE,2BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,MAAMC,WAAW,GAAGhB,aAAa,CAACQ,MAAD,CAAjC;AAEA,OAAO,MAAMS,EAAE,GAAGb,YAAY,CAACY,WAAD,CAAvB;AAEP,OAAO,MAAME,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACjB,GAAV,CAAe,SAAQc,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,QAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AAGF;;AACD,SAAOd,OAAP;AACD,CAtBM;AAwBP,OAAO,MAAMe,IAAI,GAAGnC,OAAO,EAApB;AACP,OAAO,MAAMqB,SAAS,GAAGlB,YAAY,EAA9B;AAEP,MAAMiC,QAAQ,GAAG,IAAInC,kBAAJ,EAAjB;AACAmC,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAC9BrC,eAAe,CAACiC,IAAD,EAAOC,QAAP,CAAf,CAAgCI,KAAhC,CAAuCT,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAjD,CADK,C,CAGP","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup  } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n\nconst config = {\n    apiKey: \"AIzaSyDhUimV11Dg_v0iY5OYofmTukeLYDM2Dwg\",\n    authDomain: \"crwn-db-e0987.firebaseapp.com\",\n    projectId: \"crwn-db-e0987\",\n    storageBucket: \"crwn-db-e0987.appspot.com\",\n    messagingSenderId: \"224708268930\",\n    appId: \"1:224708268930:web:5443f4dcc62a8b944f359b\",\n    measurementId: \"G-4EM2Z20Y1T\"\n};\n\nconst firebaseApp = initializeApp(config);\n \nexport const db = getFirestore(firebaseApp);\n \nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createAt = new Date();\n \n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n \n \n  }\n  return userRef; \n};\n\nexport const auth = getAuth();\nexport const firestore = getFirestore();\n \nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n \nexport const signInWithGoogle = () =>\n  signInWithPopup(auth, provider).catch((error) => console.log(error));\n \n// export default firebase;"]},"metadata":{},"sourceType":"module"}